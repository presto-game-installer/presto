---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SideBar from "../components/SideBar.astro";
import StatusBar from "../components/StatusBar.astro";
import { ViewTransitions } from "astro:transitions";
import Settings from "../components/settings/Settings.astro";
import { IS_CLIENT } from "../config";

import { SITE_TITLE, SITE_DESCRIPTION, TRANSITION_API } from "../config";
import { ProgressBarStatus } from "@tauri-apps/api/window";

const {
  image,
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  includeSidebar = true,
  sideBarActiveItemID,
  ogType,
} = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="dark">
  <head>
    <BaseHead title={title} description={description} image={image} , ogType={ogType} />
    {TRANSITION_API && <ViewTransitions />}
    <script src="/js/gamecontroller.min.js" is:inline/>
    <script is:inline>
      document.addEventListener('astro:page-load', () => {
        const focusableElements = 'button:not([inert]), a[href]:not([inert]), select:not([inert]), textarea:not([inert]), [tabindex]:not([tabindex="-1"])';
        const allFocusable = Array.from(document.querySelectorAll(focusableElements));
        console.log('allFocusable',allFocusable);
        console.log('allFocusable[1]',allFocusable[1]);
        allFocusable[1].focus();
      });

      gameControl.on('connect', gamepad => {
        const focusableElements = 'button:not([inert]), a[href]:not([inert]), select:not([inert]), textarea:not([inert]), [tabindex]:not([tabindex="-1"])';
          //set initial focus
          const allFocusable = Array.from(document.querySelectorAll(focusableElements));
          console.log('allFocusable',allFocusable);
          console.log('allFocusable[1]',allFocusable[1]);
          allFocusable[1].focus();
          console.log('A new gamepad was connected!');

          // UP
          gamepad.after('button12',() => {
            const focusableElements = 'button:not([inert]), a[href]:not([inert]), select:not([inert]), textarea:not([inert]), [tabindex]:not([tabindex="-1"])';
            const currentElement = document.querySelector(':focus');
            const allFocusable = Array.from(document.querySelectorAll(focusableElements));
            console.log('allFocusable',allFocusable);
            const currentIndex = allFocusable.indexOf(currentElement);
            const nextElement = allFocusable[currentIndex - 1] || allFocusable[0];
            console.log('nextElement',nextElement);
            nextElement.focus();
            console.log('Button 12 still pressed...'); 
            
          });

          // DOWN
          gamepad.after('button13',() => {
            const focusableElements = 'button:not([inert]), a[href]:not([inert]), select:not([inert]), textarea:not([inert]), [tabindex]:not([tabindex="-1"])';
            const currentElement = document.querySelector(':focus');
            const allFocusable = Array.from(document.querySelectorAll(focusableElements));
            console.log('allFocusable',allFocusable);
            const currentIndex = allFocusable.indexOf(currentElement);
            const nextElement = allFocusable[currentIndex + 1] || allFocusable[0];
            console.log('nextElement',nextElement);
            nextElement.focus();
            console.log('Button 13 still pressed...'); 
          });

          // A or X
          gamepad.after('button0',() => {
            document.activeElement.click();
            console.log('Button 0 still pressed...');             
          });
      });

    </script>
  </head>
  <body>
    <Settings transition:persist/>
    <div class="bg-base-100 drawer lg:drawer-open">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content bg-base-100">
        <Header title={SITE_TITLE} />
        <div class="md:flex md:justify-center">
          <main class="p-6 pt-5 container">
            <slot />
          </main>
        </div>
        <Footer />
      </div>
      {includeSidebar && <SideBar sideBarActiveItemID={sideBarActiveItemID} />}
    </div>
    {IS_CLIENT && <StatusBar />}
  </body>
</html>
