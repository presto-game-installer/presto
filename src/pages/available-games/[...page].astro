---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug"
import { IS_CLIENT } from "../../config";


export async function getStaticPaths({ paginate }) {
  const games = await getCollection("game");
  games.sort((a, b) => b.data.releaseDate.valueOf() - a.data.releaseDate.valueOf());
  return paginate(games, { pageSize: 100 });
}

const isClient = IS_CLIENT;

const { page } = Astro.props;
---
<script is:inline>
  if(globalThis?.presto?.state != 'loaded') {
      console.debug("Presto:: Settings not loaded yet");
      addEventListener('presto:settings-loaded', () => {
          readyFilter();
      });
  } else {
    readyFilter();
  }

  //TODO: have this only run on the client
  function readyFilter() {
    if (!globalThis.presto.currentSettings.disregardPlatform) {
      const currentPlatform = globalThis.presto.currentPlatform;
      const gamesList = document.querySelector('ul');
      const games = gamesList.children;
      for (let i = 0; i < games.length; i++) {
        const platforms = JSON.parse(games[i].getAttribute('data-platforms'));
        if (!platforms.includes(currentPlatform) &&
         !(globalThis.presto.currentSettings.showWindowsForProton &&
          platforms.includes('windows'))) {
          games[i].style.display = 'none';
        }
      }
    }
  }
</script>
<BaseLayout title="Games" sideBarActiveItemID="game">
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Available Games</div>
  </div>
  <ul>
    {page.data.map((game) => (
      <>
        <HorizontalCard
          title={game.data.title}
          slugTitle={createSlug(game.data.title, game.slug)}
          defaultHide={false}
          desc={game.data.description}
          url={"/available-games/" + createSlug(game.data.title, game.slug)}
          target="_self"
          badge={game.data.badge}
          tags={game.data.tags}
          supportedPlatforms={game.data.supportedPlatforms}
          usesDMG={game.data.usesDMG}
        />
      </>
    ))}
  </ul>
</BaseLayout>
